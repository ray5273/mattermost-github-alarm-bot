version: '3.8'
services:
  postgres:
    container_name: postgres
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql  # 초기화 스크립트 추가
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:latest
    env_file:
      - .env
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: ${POSTGRES_USER}
      PGRST_JWT_SECRET: ${JWT_SECRET}
      PGRST_OPENAPI_SERVER_PROXY_URI: http://${HOST_URL}:3002
    ports:
      - "3002:3000"
    depends_on:
      postgres:
        condition: service_healthy
  
  swagger:
    container_name: swagger
    image: swaggerapi/swagger-ui
    env_file:
      - .env
    ports:
      - "8080:8080"
    environment:
      API_URL: http://${HOST_URL}:3002/
      SWAGGER_JSON_URL: http://${HOST_URL}:3002/
    depends_on:
      - postgrest

  scheduler:
    container_name: scheduler
    env_file:
      - .env
    build:
      context: .
      dockerfile: scheduler/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      github-crawler:
        condition: service_started
      mattermost-notifier:
        condition: service_started
    environment:
      - CRON_SCHEDULE=${CRON_SCHEDULE}

  github-crawler:
    container_name: github-crawler
    env_file:
      - .env
    build: 
      context: .
      dockerfile: github-crawler/Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy

  mattermost-notifier:
    container_name: mattermost-notifier
    env_file:
      - .env
    build:
      context: .
      dockerfile: mattermost-notifier/Dockerfile
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - MATTERMOST_BOT_TOKEN=${MATTERMOST_BOT_TOKEN}
      - MATTERMOST_SERVER_URL=${MATTERMOST_SERVER_URL}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
